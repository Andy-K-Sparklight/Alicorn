"use strict";const{finished}=require("stream"),{InvalidArgumentError,InvalidReturnValueError,RequestAbortedError}=require("../core/errors"),util=require("../core/util"),{AsyncResource}=require("async_hooks"),{addSignal,removeSignal}=require("./abort-signal");class StreamHandler extends AsyncResource{constructor(e,r,t){if(!e||"object"!=typeof e)throw new InvalidArgumentError("invalid opts");const{signal:n,method:o,opaque:i,body:a,onInfo:s}=e;try{if("function"!=typeof t)throw new InvalidArgumentError("invalid callback");if("function"!=typeof r)throw new InvalidArgumentError("invalid factory");if(n&&"function"!=typeof n.on&&"function"!=typeof n.addEventListener)throw new InvalidArgumentError("signal must be an EventEmitter or EventTarget");if("CONNECT"===o)throw new InvalidArgumentError("invalid method");if(s&&"function"!=typeof s)throw new InvalidArgumentError("invalid onInfo callback");super("UNDICI_STREAM")}catch(e){throw util.isStream(a)&&util.destroy(a.on("error",util.nop),e),e}this.opaque=i||null,this.factory=r,this.callback=t,this.res=null,this.abort=null,this.context=null,this.trailers=null,this.body=a,this.onInfo=s||null,util.isStream(a)&&a.on("error",(e=>{this.onError(e)})),addSignal(this,n)}onConnect(e,r){if(!this.callback)throw new RequestAbortedError;this.abort=e,this.context=r}onHeaders(e,r,t){const{factory:n,opaque:o,context:i}=this;if(e<200)return void(this.onInfo&&this.onInfo({statusCode:e,headers:util.parseHeaders(r)}));this.factory=null;const a=this.runInAsyncScope(n,null,{statusCode:e,headers:util.parseHeaders(r),opaque:o,context:i});if(!a||"function"!=typeof a.write||"function"!=typeof a.end||"function"!=typeof a.on)throw new InvalidReturnValueError("expected Writable");return a.on("drain",t),finished(a,{readable:!1},(e=>{const{callback:r,res:t,opaque:n,trailers:o,abort:i}=this;this.res=null,!e&&t.readable||util.destroy(t,e),this.callback=null,this.runInAsyncScope(r,null,e||null,{opaque:n,trailers:o}),e&&i()})),this.res=a,!0!==(void 0!==a.writableNeedDrain?a.writableNeedDrain:a._writableState&&a._writableState.needDrain)}onData(e){const{res:r}=this;return r.write(e)}onComplete(e){const{res:r}=this;removeSignal(this),this.trailers=util.parseHeaders(e),r.end()}onError(e){const{res:r,callback:t,opaque:n,body:o}=this;removeSignal(this),this.factory=null,r?(this.res=null,util.destroy(r,e)):t&&(this.callback=null,queueMicrotask((()=>{this.runInAsyncScope(t,null,e,{opaque:n})}))),o&&(this.body=null,util.destroy(o,e))}}function stream(e,r,t){if(void 0===t)return new Promise(((t,n)=>{stream.call(this,e,r,((e,r)=>e?n(e):t(r)))}));try{this.dispatch(e,new StreamHandler(e,r,t))}catch(r){if("function"!=typeof t)throw r;const n=e&&e.opaque;queueMicrotask((()=>t(r,{opaque:n})))}}module.exports=stream;