"use strict";const{getResponseData,buildKey,addMockDispatch}=require("./mock-utils"),{kDispatches,kDispatchKey,kDefaultHeaders,kDefaultTrailers,kContentLength,kMockDispatch}=require("./mock-symbols"),{InvalidArgumentError}=require("../core/errors");class MockScope{constructor(e){this[kMockDispatch]=e}delay(e){if("number"!=typeof e||!Number.isInteger(e)||e<=0)throw new InvalidArgumentError("waitInMs must be a valid integer > 0");return this[kMockDispatch].delay=e,this}persist(){return this[kMockDispatch].persist=!0,this}times(e){if("number"!=typeof e||!Number.isInteger(e)||e<=0)throw new InvalidArgumentError("repeatTimes must be a valid integer > 0");return this[kMockDispatch].times=e,this}}class MockInterceptor{constructor(e,t){if("object"!=typeof e)throw new InvalidArgumentError("opts must be an object");if(void 0===e.path)throw new InvalidArgumentError("opts.path must be defined");if(void 0===e.method)throw new InvalidArgumentError("opts.method must be defined");this[kDispatchKey]=buildKey(e),this[kDispatches]=t,this[kDefaultHeaders]={},this[kDefaultTrailers]={},this[kContentLength]=!1}reply(e,t,r={}){if(void 0===e)throw new InvalidArgumentError("statusCode must be defined");if(void 0===t)throw new InvalidArgumentError("data must be defined");if("object"!=typeof r)throw new InvalidArgumentError("responseOptions must be an object");const s=getResponseData(t),i=this[kContentLength]?{"content-length":s.length}:{},o={...this[kDefaultHeaders],...i,...r.headers},n={...this[kDefaultTrailers],...r.trailers},a=addMockDispatch(this[kDispatches],this[kDispatchKey],{statusCode:e,data:t,headers:o,trailers:n});return new MockScope(a)}replyWithError(e){if(void 0===e)throw new InvalidArgumentError("error must be defined");const t=addMockDispatch(this[kDispatches],this[kDispatchKey],{error:e});return new MockScope(t)}defaultReplyHeaders(e){if(void 0===e)throw new InvalidArgumentError("headers must be defined");return this[kDefaultHeaders]=e,this}defaultReplyTrailers(e){if(void 0===e)throw new InvalidArgumentError("trailers must be defined");return this[kDefaultTrailers]=e,this}replyContentLength(){return this[kContentLength]=!0,this}}module.exports.MockInterceptor=MockInterceptor,module.exports.MockScope=MockScope;