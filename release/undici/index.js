"use strict";const Client=require("./lib/client"),Dispatcher=require("./lib/dispatcher"),errors=require("./lib/core/errors"),Pool=require("./lib/pool"),BalancedPool=require("./lib/balanced-pool"),Agent=require("./lib/agent"),util=require("./lib/core/util"),{InvalidArgumentError}=errors,api=require("./lib/api"),buildConnector=require("./lib/core/connect"),MockClient=require("./lib/mock/mock-client"),MockAgent=require("./lib/mock/mock-agent"),MockPool=require("./lib/mock/mock-pool"),mockErrors=require("./lib/mock/mock-errors"),ProxyAgent=require("./lib/proxy-agent"),nodeVersion=process.versions.node.split("."),nodeMajor=Number(nodeVersion[0]),nodeMinor=Number(nodeVersion[1]);Object.assign(Dispatcher.prototype,api),module.exports.Dispatcher=Dispatcher,module.exports.Client=Client,module.exports.Pool=Pool,module.exports.BalancedPool=BalancedPool,module.exports.Agent=Agent,module.exports.ProxyAgent=ProxyAgent,module.exports.buildConnector=buildConnector,module.exports.errors=errors;let globalDispatcher=new Agent;function setGlobalDispatcher(e){if(!e||"function"!=typeof e.dispatch)throw new InvalidArgumentError("Argument agent must implement Agent");globalDispatcher=e}function getGlobalDispatcher(){return globalDispatcher}function makeDispatcher(e){return(r,o,t)=>{if("function"==typeof o&&(t=o,o=null),!r||"string"!=typeof r&&"object"!=typeof r&&!(r instanceof URL))throw new InvalidArgumentError("invalid url");if(null!=o&&"object"!=typeof o)throw new InvalidArgumentError("invalid opts");if(o&&null!=o.path){if("string"!=typeof o.path)throw new InvalidArgumentError("invalid opts.path");r=new URL(o.path,util.parseOrigin(r))}else o||(o="object"==typeof r?r:{}),r=util.parseURL(r);const{agent:i,dispatcher:l=getGlobalDispatcher()}=o;if(i)throw new InvalidArgumentError("unsupported opts.agent. Did you mean opts.client?");return e.call(l,{...o,origin:r.origin,path:r.search?`${r.pathname}${r.search}`:r.pathname,method:o.method||(o.body?"PUT":"GET")},t)}}if(module.exports.setGlobalDispatcher=setGlobalDispatcher,module.exports.getGlobalDispatcher=getGlobalDispatcher,nodeMajor>16||16===nodeMajor&&nodeMinor>=5){let e=null;module.exports.fetch=async function(r,o){e||(e=require("./lib/fetch"));const t=getGlobalDispatcher();return e.call(t,r,o)},module.exports.Headers=require("./lib/fetch/headers").Headers,module.exports.Response=require("./lib/fetch/response").Response,module.exports.Request=require("./lib/fetch/request").Request,module.exports.FormData=require("./lib/fetch/formdata").FormData,module.exports.File=require("./lib/fetch/file").File}module.exports.request=makeDispatcher(api.request),module.exports.stream=makeDispatcher(api.stream),module.exports.pipeline=makeDispatcher(api.pipeline),module.exports.connect=makeDispatcher(api.connect),module.exports.upgrade=makeDispatcher(api.upgrade),module.exports.MockClient=MockClient,module.exports.MockPool=MockPool,module.exports.MockAgent=MockAgent,module.exports.mockErrors=mockErrors;